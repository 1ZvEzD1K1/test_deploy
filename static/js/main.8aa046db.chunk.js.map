{"version":3,"sources":["context/alert/alertContext.js","components/Alert.js","components/Navbar.js","context/types.js","context/alert/alertReduser.js","context/alert/AlertState.js","pages/AboutASS.js","components/Form.js","components/TodoList.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","visible","className","type","text","onClick","aria-label","aria-hidden","Navbar","to","exact","SHOW_ALERT","HIDE_ALERT","handlers","state","payload","alertReduser","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","value","show","AboutASS","Form","useState","setValue","onSubmit","e","preventDefault","trim","placeholder","onChange","target","TodoList","todos","map","todo","Date","toLocaleDateString","class","id","Home","Array","fill","_","i","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aa046db.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext()","import React, {useContext} from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport \"./styles/alert.css\";\r\n\r\nexport default function Alert() {\r\n\r\n  const {alert, hide} = useContext(AlertContext)\r\n\r\n  if (!alert.visible) {\r\n      return null\r\n  }  \r\n\r\n  return (\r\n    <div>\r\n      <div className={`alert alert-${alert.type || 'warning'} alert-dismissible myalert`}>\r\n        <strong>Atention!</strong> \r\n        <h5>{alert.text}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={hide}\r\n          className=\"btn-sm\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"navbar-brand\">GGtodo</div>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/about\">\r\n              About Asssss\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n    </nav>\r\n  );\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'","import { HIDE_ALERT, SHOW_ALERT } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, {payload}) => ({...payload, visible: true}),\r\n    [HIDE_ALERT]: (state)=>({...state, visible:false}),\r\n    DEFAULT: state => state\r\n}\r\n\r\n\r\nexport const alertReduser = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types';\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReduser } from \"./alertReduser\";\r\n\r\nexport default function AlertState({children}) {\r\n\r\n    const [state, dispatch] = useReducer(alertReduser, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => {\r\n       dispatch({\r\n           type: SHOW_ALERT,\r\n           payload: {text, type}\r\n       }) \r\n    }\r\n\r\n    const hide = () => dispatch({type:HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide, \r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AboutASS() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">React App</h1>\r\n        <p className=\"lead\">\r\n          Version <strong>0.0.1</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useContext} from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport default function Form() {\r\n\r\n  const [value, setValue] = useState('')\r\n  const alert = useContext(AlertContext)\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (value.trim()) {     \r\n      alert.show('Todo added', 'success')\r\n      setValue('')\r\n    } else{\r\n      alert.show('Enter something')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <div className=\"form-group\">\r\n        <input \r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Enter todo\"\r\n        value={value}\r\n        onChange={(e)=>{setValue(e.target.value)}}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/todolist.css\";\r\n\r\nexport default function TodoList({ todos }) {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {todos.map((todo) => {\r\n        return (\r\n          <li className=\"todo\" key={todo.id} >\r\n            <p className=\"p\">{todo.text}</p>\r\n            <span className=\"span\">{new Date().toLocaleDateString()}</span>\r\n            <button type=\"button\" class=\"btn btn-outline-danger btn-sm button\">\r\n              &times;\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Form from '../components/Form'\r\nimport TodoList from '../components/TodoList'\r\n\r\nexport default function Home() {\r\n    const todos = new Array(3).fill('')\r\n    .map((_, i)=>({\r\n        id: i,\r\n        text: `Todo ${i+1}`\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <Form/>\r\n            <hr/>\r\n            <TodoList todos={todos}/>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"./components/Alert\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport AlertState from \"./context/alert/AlertState\";\r\nimport AboutASS from \"./pages/AboutASS\";\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AlertState>\r\n    <BrowserRouter>\r\n    <Navbar/>\r\n    <div className=\"container\">\r\n      <Alert/>\r\n      <Switch>\r\n        <Route path={'/'} exact component={Home}/>\r\n        <Route path={'/about'} component={AboutASS}/>\r\n      </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n    </AlertState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}